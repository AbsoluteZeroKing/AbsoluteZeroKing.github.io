(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{500:function(t,n,s){"use strict";s.r(n);var a=s(19),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js作用域与变量提升、new与this指向、原型与原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js作用域与变量提升、new与this指向、原型与原型链"}},[t._v("#")]),t._v(" JS作用域与变量提升、new与this指向、原型与原型链")]),t._v(" "),s("p",[t._v("[TOC]")]),t._v(" "),s("h3",{attrs:{id:"js作用域与变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js作用域与变量提升"}},[t._v("#")]),t._v(" JS作用域与变量提升")]),t._v(" "),s("p",[t._v("JS的作用域和Java有一定区别，虽然名字上也分为局部作用域和全局作用域")]),t._v(" "),s("p",[s("strong",[t._v("局部作用域："),s("strong",[t._v("也可以理解为")]),t._v("函数作用域")]),t._v("，只有在函数重声明的变量才会成为局部变量")]),t._v(" "),s("p",[t._v("**全局作用域：**函数之外声明的变量均为全局变量")]),t._v(" "),s("p",[t._v("几个关键点需要注意：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("内部作用域可以访问外部作用域的变量，但外部不能访问内部(例如所有函数都可以访问window，但window不可能调用你后面声明的变量)")])]),t._v(" "),s("li",[s("p",[t._v("JS有变量提升机制，即会提升到目前作用域的最高处，隐式出现（var变量提升只帮你声明该变量，但提升时不赋值，值默认为undefined；而函数变量提升则会将函数默认放到最上面最先加载）")])]),t._v(" "),s("li",[s("p",[t._v("如果为尚未声明的变量赋值，此变量会自动成为全局变量(例如在函数内使用 a=10，a未被声明，则自动转换到全局window.a=10)。")])]),t._v(" "),s("li",[s("p",[t._v("变量的查找顺序：")]),t._v(" "),s("p",[t._v("先找自己的（包含变量提升），在找外部的；")]),t._v(" "),s("p",[t._v("先找自己显式声明的，再找变量提升")]),t._v(" "),s("p",[t._v("先找同名函数，再找同名变量（函数和变量都还未执行需要变量提升）")]),t._v(" "),s("p",[t._v("先找同名变量，再找同名函数（函数和变量都执行了的情况下）")]),t._v(" "),s("p",[t._v("例如下面这一段代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aout'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//隐式会按下列顺序出现这些")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var a=参数a")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var a='ain'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function a(){console.log('a()');}")]),t._v("\n\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ain'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a()'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b()'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最终的输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ƒ a() { console.log('a()'); }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ain")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ain")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ƒ b() { console.log('b()'); }")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"new与this指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new与this指向"}},[t._v("#")]),t._v(" new与this指向")]),t._v(" "),s("p",[t._v("我们首先要理解new做了什么，翻阅MDN我们可以知道，new在底层其实做了这些：")]),t._v(" "),s("ol",[s("li",[t._v("创建一个空的简单JavaScript对象（即**{}**）；")]),t._v(" "),s("li",[t._v("为步骤1新创建的对象添加属性**"),s("strong",[t._v("proto")]),t._v("**，将该属性链接至构造函数的原型对象 ；")]),t._v(" "),s("li",[t._v("将步骤1新创建的对象作为"),s("strong",[t._v("this")]),t._v("的上下文 ；")]),t._v(" "),s("li",[t._v("返回这个对象，如果该函数没有返回对象，则返回"),s("strong",[t._v("this")]),t._v("。")])]),t._v(" "),s("p",[t._v("这里我们先不深入理解，只需要知道两点:")]),t._v(" "),s("ul",[s("li",[t._v("new会创建一个新对象")]),t._v(" "),s("li",[t._v("新对象会成为this的指向")])]),t._v(" "),s("p",[t._v("至于new的细节到下面的原型与原型链中我们将做深层次的分析理解；")]),t._v(" "),s("p",[t._v("来看下一段代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'111'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("第一个console处的fun，由于没有调用他，这里将其当作一个普通变量来看，所以打印出的就是他本身的函数内容")]),t._v(" "),s("blockquote",[s("p",[t._v("result：")]),t._v(" "),s("p",[t._v("ƒ fun() {\nthis.a = '123';\nconsole.log(this)\nreturn '111'\n}")])]),t._v(" "),s("p",[t._v("第二个console处的fun()，将fun()当作静态函数调用，所以首先执行其内部代码，同时此处由于是在全局调用fun()，fun的this指向全局window，同时fun()返回值为111，所以最后打印结果如下")]),t._v(" "),s("blockquote",[s("p",[t._v("result:")]),t._v(" "),s("p",[t._v('Window {window: Window, self: Window, document: document, a: "123", location: Location, …}\n111')])]),t._v(" "),s("p",[t._v("第三个console处的new fun()，实例化了一个对象，此时将fun()作为对象挂载到了其调用的对象上(即window上)，然后执行fun()，此时fun()里面的this指向自己这个对象；然后new fun()返回的也是自己这个对象，所以console再次打印一次")]),t._v(" "),s("blockquote",[s("p",[t._v("result")]),t._v(" "),s("p",[t._v('fun {a: "123"}\nfun {a: "123"}')])]),t._v(" "),s("h3",{attrs:{id:"原型与原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" 原型与原型链")]),t._v(" "),s("p",[t._v("其实经过上面一系列demo例子我们感觉已经快能理解这些内容了，但我们其实已经可以感觉到了，函数的局部与全局作用域，以及new和this指向，背后有一层更加奇妙的东西在做支撑，为了搞清楚这其中到底做了什么，我们可以深入理解一下new所做的步骤；不过在此之前，我们先弄清其new的对象实现的原理")]),t._v(" "),s("p",[t._v("我们都知道javaScript是一门支持面向对象的程序语言，但其与我们现在学习过的java，c++不同的是，JavaScript的面向对象是依靠"),s("strong",[t._v("原型和原型链")]),t._v("所完成的")]),t._v(" "),s("p",[t._v("当谈到继承时，JavaScript 只有一种结构：对象。每个实例对象（object）都有一个私有属性（称之为 "),s("strong",[t._v("proto")]),t._v(" ）指向它的构造函数的原型对象（"),s("strong",[t._v("prototype")]),t._v("）。该原型对象也有一个自己的原型对象（"),s("strong",[t._v("proto")]),t._v("），层层向上直到一个对象的原型对象为 "),s("code",[t._v("null")]),t._v("。根据定义，"),s("code",[t._v("null")]),t._v(" 没有原型，并作为这个"),s("strong",[t._v("原型链")]),t._v("中的最后一个环节。")]),t._v(" "),s("p",[t._v("遵循ECMAScript标准，"),s("code",[t._v("someObject.[[Prototype]]")]),t._v(" 符号是用于指向 "),s("code",[t._v("someObject")]),t._v(" 的原型。从 ECMAScript 6 开始，"),s("code",[t._v("[[Prototype]]")]),t._v(" 可以通过 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Object.getPrototypeOf()")]),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Object.setPrototypeOf()")]),s("OutboundLink")],1),t._v(" 访问器来访问。这个等同于 JavaScript 的非标准但许多浏览器实现的属性 "),s("code",[t._v("__proto__")]),t._v("。")]),t._v(" "),s("p",[t._v("但它不应该与构造函数 "),s("code",[t._v("func")]),t._v(" 的 "),s("code",[t._v("prototype")]),t._v(" 属性相混淆。被构造函数创建的实例对象的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 指向 "),s("code",[t._v("func")]),t._v(" 的 "),s("code",[t._v("prototype")]),t._v(" 属性。"),s("strong",[s("code",[t._v("Object.prototype")])]),t._v(" 属性表示 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Object")]),s("OutboundLink")],1),t._v(" 的原型对象。")]),t._v(" "),s("p",[t._v("上面说的比较绕，但是可以用几句话总结与完善")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("javascript一切皆为对象")])]),t._v(" "),s("li",[s("p",[t._v("对象由Function创造，而Function本身也是对象")])]),t._v(" "),s("li",[s("p",[t._v("每个对象都有一个隐式原型_proto_")]),t._v(" "),s("p",[t._v("每个函数都有一个显式原型prototype")])]),t._v(" "),s("li",[s("p",[t._v("对象的_proto_自己也是一个对象，指向其构造函数原型的prototype")]),t._v(" "),s("p",[t._v("函数的prototype自己也是一个对象，其有一个属性值叫constructor，指向函数本身")]),t._v(" "),s("p",[t._v("如下图:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.leesdog.space/JS%E5%8E%9F%E5%9E%8B%E9%93%BE.png",alt:"未命名文件"}})])])]),t._v(" "),s("p",[t._v("同时由于function testFunc()是函数的同时本身其实也是一个对象，所以也有一个_proto_属性指向构造他的原型的prototype；")]),t._v(" "),s("p",[t._v("补充上图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.leesdog.space/js%E5%8E%9F%E5%9E%8B%E9%93%BE2.png",alt:"未命名文件 (1)"}})]),t._v(" "),s("p",[t._v("继续套娃，由于prototype本身也是一个对象，所以它也有自己的_proto_，指向的是构建它的原型的prototype，谁构建的它呢，答案是Object本身，所以补充上图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.leesdog.space/js%E5%8E%9F%E5%9E%8B%E9%93%BE3.png",alt:"未命名文件 (2)"}})]),t._v(" "),s("p",[t._v("继续套娃，由于Object本身也是一个对象，所以其也有自己的proto，指向的是构造它的原型的prototype，前面已经说了，对象由Function构造，所以完善上图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.leesdog.space/js%E5%8E%9F%E5%9E%8B%E9%93%BE4.png",alt:"未命名文件 (3)"}})]),t._v(" "),s("p",[t._v("但是Object.prototype._proto_较为特殊，因为Obejct.prototype已经是顶级对象的原型了，而_proto_ 要指向构造其原型的prototype，这里是没有的，所以指向null")]),t._v(" "),s("p",[t._v("同时由于函数对象都是被顶级构造函数Function所创建的，Function是被自身创建的，所以Function._proto_===Function.prototype")]),t._v(" "),s("p",[t._v("同时由于Function.prototype本质上也是一个对象，所以其proto指向创建其原型的prototype，即Object.prototype")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.leesdog.space/js%E5%8E%9F%E5%9E%8B%E9%93%BE6.png",alt:"未命名文件 (5)"}})]),t._v(" "),s("p",[t._v("接下来我们来看一下原型之间的继承关系")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让我们从一个函数里创建一个对象o，它自身拥有属性a和b的：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这么写也一样\nfunction f() {\n  this.a = 1;\n  this.b = 2;\n}\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {a: 1, b: 2}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在f函数的原型上定义属性")]),t._v("\nf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要在 f 函数的原型上直接定义 f.prototype = {b:3,c:4};这样会直接打破原型链")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o.[[Prototype]] 有属性 b 和 c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  (其实就是 o.__proto__ 或者 o.constructor.prototype)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o.[[Prototype]].[[Prototype]] 是 Object.prototype.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后o.[[Prototype]].[[Prototype]].[[Prototype]]是null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这就是原型链的末尾，即 null，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据定义，null 就是没有 [[Prototype]]。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 综上，整个原型链如下:")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {a:1, b:2} ---\x3e {b:3, c:4} ---\x3e Object.prototype---\x3e null")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a是o的自身属性吗？是的，该属性的值为 1")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b是o的自身属性吗？是的，该属性的值为 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型上也有一个'b'属性，但是它不会被访问到。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 这种情况被称为"属性遮蔽 (property shadowing)"')]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c是o的自身属性吗？不是，那看看它的原型上有没有")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c是o.[[Prototype]]的属性吗？是的，该属性的值为 4")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d 是 o 的自身属性吗？不是，那看看它的原型上有没有")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d 是 o.[[Prototype]] 的属性吗？不是，那看看它的原型上有没有")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o.[[Prototype]].[[Prototype]] 为 null，停止搜索")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找不到 d 属性，返回 undefined")]),t._v("\n")])])]),s("p",[t._v("当访问一个对象的方法或属性时，我们会先找他自己本身的属性方法，如果没有我们会去其原型链中逐层查找其father有没有相应的方法(这和java,C++等面向对象的类十分相似)")]),t._v(" "),s("p",[t._v("如何实现我们熟悉的这样一种继承关系呢？假设我想让son()函数继承自father()，在js里很容易，只需要挂件的一行代码：")]),t._v(" "),s("p",[s("strong",[t._v("son.prototype=new father()")])]),t._v(" "),s("p",[t._v("这时我们就可以解释上面的疑问了，即new中间到底干了啥，总结起来四个步骤：")]),t._v(" "),s("ol",[s("li",[t._v("创建一个空的简单JavaScript对象（即**{}**）；")]),t._v(" "),s("li",[t._v("为步骤1新创建的对象添加属性**"),s("strong",[t._v("proto")]),t._v("**，将该属性链接至构造函数的原型对象的prototype ；")]),t._v(" "),s("li",[t._v("将步骤1新创建的对象作为"),s("strong",[t._v("this")]),t._v("的上下文 ；")]),t._v(" "),s("li",[t._v("返回这个对象，如果该函数没有返回对象，则返回"),s("strong",[t._v("this")]),t._v("。")])]),t._v(" "),s("p",[t._v("所以我们可以手写出new这个函数的过程：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Mynew(constructor, argument) {\n//1.创建一个空的简单JavaScript对象（即**{}**）；\nconst obj = {};\n//2.为步骤1新创建的对象添加属性__proto__，将该属性链接至构造函数的原型对象的prototype ；\nObject.setPrototypeOf(obj, constructor.prototype);\n//3.将步骤1新创建的对象作为this的上下文 ；\nconstructor.call(obj, argument);\n//4.如果该函数没有返回对象，则返回**this**。\nreturn obj;\n}\n\nfunction Father(name) {\nthis.name = name;\nconsole.log(this);\n}\n\n// 替换var father = new Father('lzs')\nvar father = Mynew(Father, 'lzs');\nconsole.log(father.name);\n")])])]),s("p",[t._v("最终结果：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.leesdog.space/js%E5%8E%9F%E5%9E%8B%E9%93%BEnew%E6%BC%94%E7%A4%BA.png",alt:"image-20220116180817902"}})])])}),[],!1,null,null,null);n.default=e.exports}}]);